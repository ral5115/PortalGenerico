<!DOCTYPE html>

@using System.Data
@using Newtonsoft.Json;

@{
    DataSet DatosImportantes = JsonConvert.DeserializeObject<DataSet>(Session["DatosImportantes"].ToString());
}

<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Generic Transfer</title>
    <meta content='width=device-width, initial-scale=1.0, shrink-to-fit=no' name='viewport' />
    <link rel="icon" href="~/Content/assets/img/icon.ico" type="image/x-icon" />
    <script src="~/Content/assets/js/plugin/webfont/webfont.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script>
        WebFont.load({
            google: { "families": ["Lato:300,400,700,900"] },
            custom: { "families": ["Flaticon", "Font Awesome 5 Solid", "Font Awesome 5 Regular", "Font Awesome 5 Brands", "simple-line-icons"], urls: ['../Content/assets/css/fonts.min.css'] },
            active: function () {
                sessionStorage.fonts = true;
            }
        });
    </script>

    @Styles.Render("~/ContenidoGeneral/css")

</head>
<body>
    <div class="wrapper">
        <div class="main-header">
            <div class="logo-header" data-background-color="blue" style="@DatosImportantes.Tables[0].Rows[0]["EP_ColorFondoEmpresa"].ToString()">

                <a class="logo">
                    <h1 style="@DatosImportantes.Tables[0].Rows[0]["EP_ColorTextoEmpresa"].ToString()" class="navbar-brand"><i class="fa fa-building" aria-hidden="true"></i> @DatosImportantes.Tables[0].Rows[0]["EP_TextoEmpresa"].ToString() @Session["Ambiente"].ToString()</h1>
                </a>
                <button class="navbar-toggler sidenav-toggler ml-auto" type="button" data-toggle="collapse" data-target="collapse" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon">
                        <i class="icon-menu"></i>
                    </span>
                </button>
                <button class="topbar-toggler more"><i class="icon-options-vertical"></i></button>
                <div class="nav-toggle">
                    <button class="btn btn-toggle toggle-sidebar ">
                        <i class="icon-menu"></i>
                    </button>
                </div>
            </div>
            <nav class="navbar navbar-header navbar-expand-lg" data-background-color="blue2" style="@DatosImportantes.Tables[0].Rows[0]["EP_ColorFondoNavbar"].ToString()">

                <div class="container-fluid">

                    <ul class="navbar-nav topbar-nav ml-md-auto align-items-center">

                        <li class="nav-item dropdown hidden-caret">
                            <a class="dropdown-toggle profile-pic" data-toggle="dropdown" href="#" aria-expanded="false">
                                <div class="avatar-sm">
                                    <img src="~/Content/images/LogoGT.png" alt="..." class="avatar-img rounded-circle">
                                </div>
                            </a>
                            <ul class="dropdown-menu dropdown-user animated fadeIn">
                                <div class="dropdown-user-scroll scrollbar-outer">
                                    <li>
                                        <div class="user-box">
                                            <div class="avatar-lg"><img src="~/Content/images/Usuario.png" alt="image profile" class="avatar-img rounded"></div>
                                            <div class="u-text">
                                                <h4>@DatosImportantes.Tables[0].Rows[0]["NombreCompleto"].ToString()</h4>
                                                <p class="text-muted">@DatosImportantes.Tables[0].Rows[0]["Correo"].ToString()</p>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="dropdown-divider"></div>

                                        <a class="dropdown-item" href="~/Login/Logout">Salir</a>
                                    </li>
                                </div>
                            </ul>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>

        <div class="sidebar sidebar-style-2">
            <div class="sidebar-wrapper scrollbar scrollbar-inner" style="@DatosImportantes.Tables[0].Rows[0]["EP_ColorFondoSiebar"].ToString()">
                <div class="sidebar-content">
                    <div class="user">
                        <div class="avatar-sm float-left mr-2">
                            <img src="~/Content/images/LogoGT.png" alt="..." class="avatar-img rounded-circle">
                        </div>
                        <div class="info">
                            <a data-toggle="collapse" href="#collapseExample" aria-expanded="true">
                                <span>
                                    @DatosImportantes.Tables[0].Rows[0]["NombreCompleto"].ToString()
                                    <span class="user-level">@DatosImportantes.Tables[0].Rows[0]["Desc_Perfil"].ToString()</span>
                                </span>
                            </a>
                            <div class="clearfix"></div>

                        </div>
                    </div>

                    @Html.Raw(Session["Menu"].ToString())

                </div>
            </div>
        </div>

        @RenderBody()

        <div id="Cargando" class="cCargando" style="visibility: hidden;">
            <div id="divProcesoMsg" class="cCargandoImg">
                <div class="row">
                    <div id="loader">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="lading"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    @Scripts.Render("~/ContenidoGeneral/js")

    <script>

        function Proceso() {

        if (document.getElementById("Cargando").style.visibility == "visible")
            document.getElementById("Cargando").style.visibility = "hidden";
        else
            document.getElementById("Cargando").style.visibility = "visible";

    }

    window.onbeforeunload = function (e) {
        Proceso();
    };

        Circles.create({
            id: 'circles-1',
            radius: 45,
            value: 60,
            maxValue: 100,
            width: 7,
            text: 5,
            colors: ['#f1f1f1', '#FF9E27'],
            duration: 400,
            wrpClass: 'circles-wrp',
            textClass: 'circles-text',
            styleWrapper: true,
            styleText: true
        })

        Circles.create({
            id: 'circles-2',
            radius: 45,
            value: 70,
            maxValue: 100,
            width: 7,
            text: 36,
            colors: ['#f1f1f1', '#2BB930'],
            duration: 400,
            wrpClass: 'circles-wrp',
            textClass: 'circles-text',
            styleWrapper: true,
            styleText: true
        })

        Circles.create({
            id: 'circles-3',
            radius: 45,
            value: 40,
            maxValue: 100,
            width: 7,
            text: 12,
            colors: ['#f1f1f1', '#F25961'],
            duration: 400,
            wrpClass: 'circles-wrp',
            textClass: 'circles-text',
            styleWrapper: true,
            styleText: true
        })

        var totalIncomeChart = document.getElementById('totalIncomeChart').getContext('2d');

        var mytotalIncomeChart = new Chart(totalIncomeChart, {
            type: 'bar',
            data: {
                labels: ["S", "M", "T", "W", "T", "F", "S", "S", "M", "T"],
                datasets: [{
                    label: "Total Income",
                    backgroundColor: '#ff9e27',
                    borderColor: 'rgb(23, 125, 255)',
                    data: [6, 4, 9, 5, 4, 6, 4, 3, 8, 10],
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    display: false,
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            display: false
                        },
                        gridLines: {
                            drawBorder: false,
                            display: false
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            drawBorder: false,
                            display: false
                        }
                    }]
                },
            }
        });

        $('#lineChart').sparkline([105, 103, 123, 100, 95, 105, 115], {
            type: 'line',
            height: '70',
            width: '100%',
            lineWidth: '2',
            lineColor: '#ffa534',
            fillColor: 'rgba(255, 165, 52, .14)'
        });

    </script>

</body>
</html>